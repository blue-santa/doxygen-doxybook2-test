<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="Miscellaneous_8hpp" kind="file" language="C++">
    <compoundname>Miscellaneous.hpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includedby refid="main_8cpp" local="yes">main.cpp</includedby>
    <includedby refid="Miscellaneous_8cpp" local="yes">Miscellaneous.cpp</includedby>
    <includedby refid="StopWatch_8cpp" local="yes">StopWatch.cpp</includedby>
    <includedby refid="TokenizerFunctions_8cpp" local="yes">TokenizerFunctions.cpp</includedby>
    <includedby refid="Value_8cpp" local="yes">Value.cpp</includedby>
    <incdepgraph>
      <node id="26">
        <label>iomanip</label>
      </node>
      <node id="28">
        <label>string</label>
      </node>
      <node id="27">
        <label>vector</label>
      </node>
      <node id="25">
        <label>iostream</label>
      </node>
      <node id="24">
        <label>Miscellaneous.hpp</label>
        <link refid="Miscellaneous_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="Miscellaneous_8hpp_1aff6c831918692405e75fc55c43424304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clearConsole</definition>
        <argsstring>()</argsstring>
        <name>clearConsole</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous.hpp" line="28" column="1" bodyfile="Miscellaneous.cpp" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="Miscellaneous_8hpp_1a636fd49cdda0b92e7ab99db1ef1c6aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void waitForContinue</definition>
        <argsstring>()</argsstring>
        <name>waitForContinue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous.hpp" line="31" column="1" bodyfile="Miscellaneous.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="Miscellaneous_8hpp_1a2d7645aa1c799044da815dd98cf54d46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void capture_user_input</definition>
        <argsstring>(int &amp;userInput)</argsstring>
        <name>capture_user_input</name>
        <param>
          <type>int &amp;</type>
          <declname>userInput</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous.hpp" line="34" column="1" bodyfile="Miscellaneous.cpp" bodystart="40" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="Miscellaneous_8hpp_1aae8e4369bbac050311929327d8bffa51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testUserInput</definition>
        <argsstring>(string &amp;user_input_temp, int &amp;userInput)</argsstring>
        <name>testUserInput</name>
        <param>
          <type>string &amp;</type>
          <declname>user_input_temp</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>userInput</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Miscellaneous.hpp" line="37" column="1" bodyfile="Miscellaneous.cpp" bodystart="73" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Miscellaneous.hpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>CS<sp/>201</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>December<sp/>7,<sp/>2019</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Bryan<sp/>Beus</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Declaration<sp/>file<sp/>for<sp/>miscellaneous<sp/>content</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MISC_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MISC_HPP<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::vector;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::string;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::cout;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::cin;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::endl;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::getline;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::istringstream;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::setw;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::left;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>console</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearConsole();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>user<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>waitForContinue();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Capture<sp/>the<sp/>user<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>capture_user_input(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>userInput);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Test<sp/>whether<sp/>the<sp/>user&apos;s<sp/>integer<sp/>input<sp/>is<sp/>a<sp/>valid<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>testUserInput(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>user_input_temp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>userInput);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Miscellaneous.hpp"/>
  </compounddef>
</doxygen>
